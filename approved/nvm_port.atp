// ***************************************************************************
// GENERATED:
//   Time:    31-Aug-2015 03:21AM
//   By:      Stephen McGinty
//   Command: origen g port -t debug.rb
// ***************************************************************************
// ENVIRONMENT:
//   Application
//     Source:    ssh://git@github.com:Origen-SDK/origen.git
//     Version:   0.2.3
//     Branch:    master(5ccfa6bfcca) (+local edits)
//   Origen
//     Source:    https://github.com/Origen-SDK/origen
//     Version:   0.2.3
//   Plugins
//     origen_core_support:      0.1.1
//     origen_doc_helpers:       0.2.0
// ***************************************************************************
// This is a dummy pattern created by the Origen test environment
// ***************************************************************************
import tset nvmbist;                                                                            
svm_only_file = no;                                                                             
opcode_mode = extended;                                                                         
compressed = yes;                                                                               
                                                                                                
vector ($tset, nvm_reset, nvm_clk, nvm_clk_mux, porta, portb, nvm_invoke, nvm_done, nvm_fail, nvm_alvtst, nvm_ahvtst, nvm_dtst, tclk, trst)                               
{                                                                                               
start_label pattern_st:                                                                         
// ######################################################################
// ## Enter Test Mode
// ######################################################################
                                                                 > nvm_slow                     1 1 1 00100000 00000000 0 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00001000 00000000 1 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00001000 00000000 0 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00100000 00000000 1 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00111000 00000000 1 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00111000 00000000 1 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00111000 00000000 1 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00111000 00000000 1 H L X X X 0 1 ;
                                                                 > nvm_slow                     1 1 1 00111000 00000000 1 H L X X X 0 1 ;                               
// ######################################################################
// ## Test that toggle works
// ######################################################################
// There should be 10 vectors here with alternating port A
                                                                 > nvmbist                      1 1 1 10101010 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 01010101 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 10101010 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 01010101 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 10101010 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 01010101 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 10101010 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 01010101 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 10101010 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 01010101 00000000 0 H L X X X 0 1 ;
// ######################################################################
// ## Test that toggle! works
// ######################################################################
// There should be 3 vectors here with alternating port A
                                                                 > nvmbist                      1 1 1 10101010 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 01010101 00000000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 10101010 00000000 0 H L X X X 0 1 ;
// ######################################################################
// ## Test that comparing works, port A should expect 0x3F
// ######################################################################
                                                                 > nvmbist                      1 1 1 LLHHHHHH 00000000 0 H L X X X 0 1 ;
// ######################################################################
// ## Test that little endian works
// ######################################################################
// In the following vectors port b should be the little endian
// representation of port a
                                                                 > nvmbist                      1 1 1 00111111 11111100 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 HHLLLLLL LLLLLLHH 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 00010010 01001000 0 H L X X X 0 1 ;
// ######################################################################
// ## Test that aliasing a port pin works
// ######################################################################
// In the following vector PORT A5 should be opposite state from the rest
                                                                 > nvmbist                      1 1 1 00100000 01001000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 HHLHHHHH 01001000 0 H L X X X 0 1 ;
// ######################################################################
// ## Test that aliasing a port works
// ######################################################################
// In the following vectors PORTA should toggle
                                                                 > nvmbist                      1 1 1 10101010 01001000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 01010101 01001000 0 H L X X X 0 1 ;
// ######################################################################
// ## Test that aliasing multiple pins within a port works
// ######################################################################
// In the following vectors the nibbles of PORTA should be in opposite states
                                                                 > nvmbist                      1 1 1 11110000 01001000 0 H L X X X 0 1 ;
                                                                 > nvmbist                      1 1 1 LLLLHHHH 01001000 0 H L X X X 0 1 ;
end_module                                                       > nvmbist                      1 1 1 LLLLHHHH 01001000 0 H L X X X 0 1 ;
}                                                                                               
