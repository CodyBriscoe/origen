% render "layouts/basic.html", tab: :plugins do

<style type="text/css">
  table {
    background: ghostwhite;
  }
  table tr td:first-child {
    width: 25%;
  }
</style>

## Plugins

Origen is powered by a growing library of community maintained plugins, if you own a plugin
that is not listed here
please [submit a pull request](https://github.com/Origen-SDK/origen/blob/master/templates/web/plugins.md.erb)
with the necessary update.

### Origen Core

| Website | Description
|:--------|:-----------
| [Origen App Generators](https://github.com/Origen-SDK/origen_app_generators) | New application generators, this basically implements the 'origen new' command


### General

| Website | Description
|:--------|:-----------
| [Documentation Helpers](http://origen-sdk.org/doc_helpers/) | Layouts and helpers for common documentation tasks
| [Cross Origen](http://origen-sdk.org/cross_origen/) | In an ideal world everyone would use Origen but back in reality design IP exists in many different formats. It is the goal of this plugin to provide import and export methods for all common formats e.g. IPXACT, etc.
| [Memory Image](http://origen-sdk.org/memory_image/) | Provides a standard API for consuming memory image files in any format e.g. s-record, hex

### Test Engineering

#### Testers

| Website | Description
|:--------|:-----------
| [Testers](http://origen-sdk.org/testers) | Provides common ATE models/drivers for test pattern and program generation
| [Debuggers](http://origen-sdk.org/debuggers) | Want to try out your patterns on the bench? Swap your tester model for one of these bench debugger models and you can do just that.

#### Transaction Protocol Drivers

| [Nexus](http://origen-sdk.org/nexus) | Origen driver for the Nexus (IEEE-STO 5001-2003) protocol
| [ARM Debug](http://origen-sdk.org/arm_debug) | Origen driver for the ARM debug protocol

#### Physical Pin Drivers

| [JTAG](http://origen-sdk.org/jtag) | Origen driver for the JTAG protocol
| [Single Wire Debug](http://origen-sdk.org/swd) | Origen driver for the ARM Single Wire Debug protocol

% end
